---
apiVersion: apps/v1beta1
kind: StatefulSet
spec:
  serviceName: mariadb
  replicas: 1
  template:
    metadata:
      labels:
        service: mariadb
      annotations:
        pod.beta.kubernetes.io/init-containers: '[          
          {
             "name": "dependencies",
             "image": "docker.io/kolla/centos-binary-kubernetes-entrypoint:4.0.0",
             "imagePullPolicy": "IfNotPresent",
             "env": [
               {
                 "name": "DEPENDENCY_JOBS",
                 "value": "mariadb-init-element"
               },
               {
                 "name": "NAMESPACE",
                 "value": "NAMESPACE"
               }
             ]
          }
        ]'
    spec:
      nodeSelector:
          kolla_controller: "true"
      containers:
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-mariadb"
          imagePullPolicy: "IfNotPresent"
          name: main
          lifecycle:
            preStop:
              exec:
                command: ["mysqladmin -u root -p$DATABASE_PASSWORD shutdown"]
          volumeMounts:            
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
            - mountPath: /var/lib/kolla/config_files
              name: pod-main-config
            - mountPath: /var/lib/mysql
              name: mariadb-persistent-storage
          env:            
            - name: KOLLA_KUBERNETES
              value: ""
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-password
                  key: password
          ports:
            - containerPort: 3306
              name: "mariadb"        
        - name: logging
          image: "172.30.202.25:5000/osp-dev/rhel-binary-fluentd"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /var/lib/kolla/config_files
              name: logging-config    
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
        - name: logging-config
          configMap:
            name: mariadb-logging
        - name: pod-main-config
          configMap:
            name: mariadb
        - name: mariadb-persistent-storage
          persistentVolumeClaim:
            claimName: mariadb
metadata:
   name: mariadb

---
apiVersion: batch/v1
kind: Job
spec:
  template:
    spec:
      nodeSelector:
          kolla_controller: "true"
      containers:
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-mariadb"
          imagePullPolicy: "IfNotPresent"
          name: main
          volumeMounts:            
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
            - mountPath: /var/lib/kolla/config_files
              name: mariadb-config
            - mountPath: /var/lib/mysql
              name: mariadb-persistent-storage
          env:            
            - name: KOLLA_KUBERNETES
              value: ""
            - name: KOLLA_BOOTSTRAP
              value: ""
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
            - name: DB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-password
                  key: password
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
        - name: mariadb-config
          configMap:
            name: mariadb
        - name: mariadb-persistent-storage
          persistentVolumeClaim:
            claimName: mariadb
      restartPolicy: OnFailure
metadata:
  name: mariadb-init-element

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10

---
apiVersion: v1
kind: Service
spec:
  ports:
    - port: 3306
      name: "mariadb"
  selector:
    service: "mariadb"
metadata:
   name:  "mariadb"
