---
apiVersion: batch/v1
kind: Job
metadata:
  name: "keystone-create-db"
spec:
  template:    
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: '[          
          {
             "name": "dependencies",
             "image": "172.30.202.25:5000/osp-dev/rhel-binary-keystone",
             "imagePullPolicy": "IfNotPresent",
             "env": [
               {
                 "name": "DEPENDENCY_SERVICE",
                 "value": "mariadb"
               },
               {
                 "name": "NAMESPACE",
                 "value": "NAMESPACE"
               }
             ]
          }  
  ]'
    spec:
      nodeSelector:
          kolla_controller: "true"
      restartPolicy: OnFailure
      containers:
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-keystone"
          imagePullPolicy: "IfNotPresent"
          name: "creating-keystone-database"
          command: ["sh", "-c"]
          args:
            - ansible localhost -m mysql_db -a
              "login_host='mariadb'
               login_port='3306'
               login_user='root'
               login_password='$DATABASE_PASSWORD'
               name='keystone'"
          volumeMounts:
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
          env:
            - name: ANSIBLE_NOCOLOR
              value: "1"
            - name: ANSIBLE_LIBRARY
              value: "/usr/share/ansible"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-password
                  key: password
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-keystone"
          imagePullPolicy: "IfNotPresent"
          name: "creating-keystone-user-and-permissions"
          command: ["sh", "-c"]
          args:
            - ansible localhost -m mysql_user -a
              "login_host='mariadb'
               login_port='3306'
               login_user='root'
               login_password='$DATABASE_PASSWORD'
               name='keystone'
               password='$KEYSTONE_DATABASE_PASSWORD'
               host='%'
               priv='keystone.*:ALL'
               append_privs='yes'"
          volumeMounts:
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
          env:
            - name: ANSIBLE_NOCOLOR
              value: "1"
            - name: ANSIBLE_LIBRARY
              value: "/usr/share/ansible"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-password
                  key: password
            - name: "KEYSTONE_DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "keystone-database-password"
                  key: password
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}

---
apiVersion: v1
kind: Service
spec:
  ports:
    - port: 5000
      name: "keystone-public"
  externalIPs:
    - 
  selector:
    service: "keystone"
    type: "api"
metadata:
   name:  "keystone-public"

---
apiVersion: v1
kind: Service
spec:
  ports:
    - port: 5000
      name: "keystone-internal"
  externalIPs:
    - 
  selector:
    service: "keystone"
    type: "api"
metadata:
   name:  "keystone-internal"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: keystone-create-endpoints
spec:
  template:    
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: '[          
          {
             "name": "dependencies",
             "image": "172.30.202.25:5000/osp-dev/rhel-binary-keystone",
             "imagePullPolicy": "IfNotPresent",
             "env": [
               {
                 "name": "DEPENDENCY_JOBS",
                 "value": "keystone-create-db,keystone-manage-db"
               },
               {
                 "name": "DEPENDENCY_SERVICE",
                 "value": "mariadb"
               },
               {
                 "name": "NAMESPACE",
                 "value": "NAMESPACE"
               }
             ]
          }    
    ]'
    spec:
      nodeSelector:
          kolla_controller: "true"
      restartPolicy: OnFailure
      containers:
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-keystone"
          imagePullPolicy: "IfNotPresent"
          name: main
          command: ["sh", "-c", "mkdir -p /var/log/kolla/keystone; sudo -E kolla_set_configs;
                    kolla_keystone_bootstrap admin
                    $KEYSTONE_ADMIN_PASSWORD
                    admin
                    admin
                    http://keystone-admin:35357/v3
                    http://keystone-internal:5000/v3
                    http://keystone-public:5000/v3
                    RegionOne"]
          volumeMounts:            
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
            - mountPath: /var/lib/kolla/config_files
              name: service-configmap
              readOnly: true
          env:
            - name: KOLLA_KUBERNETES
              value: ""
            - name: KOLLA_CONFIG_STRATEGY
              value: "COPY_ONCE"
            - name: KEYSTONE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keystone-admin-password
                  key: password
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
        - name: service-configmap
          configMap:
            name: keystone

---
apiVersion: batch/v1
kind: Job
metadata:
  name: "keystone-manage-db"
spec:
  template:    
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: '[          
          {
             "name": "dependencies",
             "image": "172.30.202.25:5000/osp-dev/rhel-binary-keystone",
             "imagePullPolicy": "IfNotPresent",
             "env": [
               {
                 "name": "DEPENDENCY_JOBS",
                 "value": "keystone-create-db"
               },
               {
                 "name": "DEPENDENCY_SERVICE",
                 "value": "mariadb"
               },
               {
                 "name": "NAMESPACE",
                 "value": "NAMESPACE"
               }
             ]
          }    
    ]'
    spec:
      nodeSelector:
          kolla_controller: "true"
      restartPolicy: OnFailure
      containers:
        - image: "172.30.202.25:5000/osp-dev/rhel-binary-keystone"
          imagePullPolicy: "IfNotPresent"
          name: "main"
          volumeMounts:
            
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
            - mountPath: /var/lib/kolla/config_files
              name: service-configmap
              readOnly: true
          env:
            - name: KOLLA_KUBERNETES
              value: ""
            - name: KOLLA_BOOTSTRAP
              value: ""
            - name: KOLLA_CONFIG_STRATEGY
              value: "COPY_ONCE"
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
        - name: service-configmap
          configMap:
            name: keystone

---
apiVersion: v1
kind: Service
spec:
  ports:
    - port: 35357
      name: "keystone-admin"
  selector:
    service: "keystone"
    type: "api"
metadata:
   name:  "keystone-admin"

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: keystone
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: keystone
        type: api
      annotations:
        kolla_upgrade: minor_rolling_safe        
        pod.beta.kubernetes.io/init-containers: '[  
          {
             "name": "dependencies",
             "image": "172.30.202.25:5000/osp-dev/rhel-binary-keystone",
             "imagePullPolicy": "IfNotPresent",
             "env": [
               {
                 "name": "DEPENDENCY_JOBS",
                 "value": "keystone-create-endpoints,keystone-create-db,keystone-manage-db"
               },
               {
                 "name": "DEPENDENCY_SERVICE",
                 "value": "mariadb"
               },
               {
                 "name": "NAMESPACE",
                 "value": "NAMESPACE"
               }
             ]
          },
          {
             "name": "initialize-keystone-logs",
             "image": "172.30.202.25:5000/osp-dev/rhel-binary-keystone",
             "imagePullPolicy": "IfNotPresent",
             "command": [
                 "sh",
                 "-ce",
                 "mkdir /var/log/kolla/keystone ;
                  chown -R keystone: /var/log/kolla/keystone;
                  chmod 755 /var/log/kolla/keystone; "],
             "volumeMounts": [
                {
                   "name": "kolla-logs",
                   "mountPath": "/var/log/kolla"
                }
             ]
          }
        ]'
    spec:
#You've got 2 days to drain or figure out why it won't.
      terminationGracePeriodSeconds: 
      nodeSelector:
          kolla_controller: "true"
      containers:
        - name: main
          image: "172.30.202.25:5000/osp-dev/rhel-binary-keystone"
          imagePullPolicy: "IfNotPresent"
          lifecycle:
            preStop:
              exec:
                command:
                  - apachectl -k graceful-stop
          volumeMounts:
            
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
            - mountPath: /var/lib/kolla-kubernetes/event
              name: kolla-kubernetes-events
            - mountPath: /var/lib/kolla/config_files
              name: service-configmap
          env:
            - name: KOLLA_KUBERNETES
              value: ""
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
          ports:
            - containerPort: 5000
              name: keystone-public
            - containerPort: 35357
              name: keystone-admin        
        - name: logging
          image: "172.30.202.25:5000/osp-dev/rhel-binary-fluentd"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /var/lib/kolla/config_files
              name: logging-config    
            - mountPath: /var/log/kolla/
              name: kolla-logs
            - mountPath: /etc/localtime
              name: host-etc-localtime
              readOnly: true
          env:
            - name: KOLLA_CONFIG_STRATEGY
              value: COPY_ONCE
      volumes:        
        - name: host-etc-localtime
          hostPath:
            path: /etc/localtime
        - name: kolla-logs
          emptyDir: {}
        - name: logging-config
          configMap:
            name: keystone-logging
        - name: kolla-kubernetes-events
          emptyDir: {}
        - name: service-configmap
          configMap:
            name: keystone            
            items:
            - key: keystone.conf
              path: keystone.conf
            - key: keystone-paste.ini
              path: keystone-paste.ini
            - key: wsgi-keystone.conf
              path: wsgi-keystone.conf
            - key: config.json
              path: config.json

